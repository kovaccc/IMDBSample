// Mocks generated by Mockito 5.3.0 from annotations
// in imdb_sample/test/ui/providers/login/login_notifier_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:imdb_sample/data/models/domain/genre.dart' as _i5;
import 'package:imdb_sample/data/repositories/auth_repository.dart' as _i2;
import 'package:imdb_sample/data/repositories/genres_repository.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [AuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepository extends _i1.Mock implements _i2.AuthRepository {
  MockAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool isUserLoggedIn() =>
      (super.noSuchMethod(Invocation.method(#isUserLoggedIn, []),
          returnValue: false) as bool);
  @override
  _i3.Future<void> login() => (super.noSuchMethod(Invocation.method(#login, []),
      returnValue: _i3.Future<void>.value(),
      returnValueForMissingStub: _i3.Future<void>.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> logout() => (super.noSuchMethod(
      Invocation.method(#logout, []),
      returnValue: _i3.Future<void>.value(),
      returnValueForMissingStub: _i3.Future<void>.value()) as _i3.Future<void>);
}

/// A class which mocks [GenresRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockGenresRepository extends _i1.Mock implements _i4.GenresRepository {
  MockGenresRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i5.Genre>> refreshGenres() =>
      (super.noSuchMethod(Invocation.method(#refreshGenres, []),
              returnValue: _i3.Future<List<_i5.Genre>>.value(<_i5.Genre>[]))
          as _i3.Future<List<_i5.Genre>>);
}
