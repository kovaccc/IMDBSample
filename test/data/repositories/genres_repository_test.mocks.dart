// Mocks generated by Mockito 5.3.0 from annotations
// in imdb_sample/test/data/repositories/genres_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:imdb_sample/data/local/sources/genres_local_data_source.dart'
    as _i3;
import 'package:imdb_sample/data/models/domain/genre.dart' as _i5;
import 'package:imdb_sample/data/models/responses/genres_response.dart' as _i2;
import 'package:imdb_sample/data/remote/sources/genres_remote_data_source.dart'
    as _i6;
import 'package:imdb_sample/util/error_handler.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGenresResponse_0 extends _i1.SmartFake
    implements _i2.GenresResponse {
  _FakeGenresResponse_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [GenresLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockGenresLocalDataSource extends _i1.Mock
    implements _i3.GenresLocalDataSource {
  MockGenresLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i5.Genre>> saveGenres(List<_i5.Genre>? genres) =>
      (super.noSuchMethod(Invocation.method(#saveGenres, [genres]),
              returnValue: _i4.Future<List<_i5.Genre>>.value(<_i5.Genre>[]))
          as _i4.Future<List<_i5.Genre>>);
  @override
  List<_i5.Genre> getGenres() =>
      (super.noSuchMethod(Invocation.method(#getGenres, []),
          returnValue: <_i5.Genre>[]) as List<_i5.Genre>);
}

/// A class which mocks [GenresRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockGenresRemoteDataSource extends _i1.Mock
    implements _i6.GenresRemoteDataSource {
  MockGenresRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.GenresResponse> getGenres() => (super.noSuchMethod(
          Invocation.method(#getGenres, []),
          returnValue: _i4.Future<_i2.GenresResponse>.value(
              _FakeGenresResponse_0(this, Invocation.method(#getGenres, []))))
      as _i4.Future<_i2.GenresResponse>);
  @override
  _i4.Future<T> apiRequest<T>(
          {dynamic apiCall, _i7.ErrorResolver? errorResolver}) =>
      (super.noSuchMethod(
          Invocation.method(#apiRequest, [],
              {#apiCall: apiCall, #errorResolver: errorResolver}),
          returnValue: _i4.Future<T>.value(null)) as _i4.Future<T>);
}
